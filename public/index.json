[{"categories":null,"contents":"Syna \u0026amp; Fragments Fragments are the base building block of your website. Each page is made up of one or multiple fragments. These can be a navigation fragment, a content fragment and more.\nWhere to put the fragments In Hugo, the simplest way to create a page is to create a directory containing an index.md file.\n","permalink":"/services/directory/libraries/","tags":null,"title":"Libraries"},{"categories":null,"contents":"Syna has a built-in communication stream that is mostly used to send messages between fragments. Although the stream is not limited to fragments, it can be used to publish anything and anywhere in the code, a subscriber can be added that can listen to the published events.\nThe stream has three main functions, publish, subscribe and unsubscribe. Any event published using the publish function can be listened to by subscribe function, allowing easy, decoupled and isolated functionalities inside fragments and the whole page.\nEvents can be triggered either by directly calling the publish function on the window.syna.stream object or by an special url query which is explained below.\npublish function You can call publish function anywhere in your code. In the built-in fragments, it\u0026rsquo;s mostly called on buttons' click handlers.\nThe function accepts two arguments, topic and args\ntopic type: string\nEvent topic.\nargs type: string | object\nWhen using the string format, the string should look like the following format:\nkey:value,key2:value2 The string will be converted to an object and will be published as paramaters along with the topic.\nEvent urls There is an easier way to publish events and that is to open a url. This is more useful when the event is going to be published when an a tag is clicked on. The url event is a url with a query appended to it that has an event attribute in it. For example:\n/fragments/stripe/?event=pricing:change\u0026amp;product=Starting plan\u0026amp;price=$9.99/mo\u0026amp;currency=usd In this example, when the page /fragments/stripe/ is opened, the event stream will translate the query, publishing a pricing:change event with product, price and currency parameters attached to it. If there is an event attribute in the query, every other attribute will be published as it\u0026rsquo;s parameter.\nNOTE: Event urls need to be Base64 encrypted. In order for the example above to work you need to add unsafeEvents = true to your config.toml file. Base64 events need to have e attribute inside them with the entire encrypted query as it\u0026rsquo;s value. The url above will look like this in the Base64 format.\n/fragments/stripe/?e=P2V2ZW50PXByaWNpbmc6Y2hhbmdlJnByb2R1Y3Q9U3RhcnRpbmcgcGxhbiZwcmljZT0kOS45OS9tbyZjdXJyZW5jeT11c2Q= To convert your event to Base64, use an online service such as base64encode.org or you can call btoa function in your browser\u0026rsquo;s devtools console. For example: btoa('?event=...\u0026amp;key=...\u0026amp;key2=...)\nsubscribe function The subscribe function adds a listener for the specified topic. This function receives the following arguments.\ntopic type: string\nEvent topic.\nlistener The listener function. The function is invoked with event parameters.\nExample: The following published event:\n/fragments/stripe/?event=pricing:change\u0026amp;product=Starting plan\u0026amp;price=$9.99/mo\u0026amp;currency=usd // or by calling the publish function window.syna.stream.publish('pricing:change', { product: 'Starting plan', price: '$9.99/mo', currency: 'usd' }) will trigger the following subscriber:\nwindow.syna.stream.subscribe('pricing:change', function(params) { alert('You have selected ' + params.product) }) ","permalink":"/services/directory/family/","tags":null,"title":"Family Lit"},{"categories":null,"contents":"There are a few frontmatter variables that can be used for all fragments. The variables are as follows:\n","permalink":"/services/directory/online/","tags":null,"title":"Online Learning"},{"categories":null,"contents":"Some fragments may display images, if configured in their content files. The configuration accepts a filename and will search for the actual image using a fallthrough mechanism. The lookup order is shown below:\n   Lookup within the fragment\u0026rsquo;s subdirectory such as content/[page]/[fragment]/[filename].md).    Lookup, if the above doesn\u0026rsquo;t match any files, it will try to match a file within the page directory such as content/[page].    Lookup, if none of the above match any files, it will try the global static/images/ directory.    So the fragment will look in the following order fragment \u0026gt; page \u0026gt; global. If you need to use an image in several pages you can put it in the static/images/ directory and the image would be available globally. But if an image may differ between two pages or even two fragments of same the type, it\u0026rsquo;s possible to collocate it with the content files either on a per page or per fragment level.\nSyna supports custom favicons in config.toml allowing for ICO, PNG or SVG image formats. In order to use one of the custom favicon formats, you can specify the image file name in config.toml and save the image file in the \u0026lsquo;static/\u0026rsquo; directory.\n","permalink":"/services/directory/faq/","tags":null,"title":"FAQ"},{"categories":null,"contents":"2nd Chance Employment Counselling\nEmployment Ontario\n→GUELPH, RURAL WELLINGTON\nwww.2ndchance.ca\nWhat: • Employment Resource Centre\nJob Boards Access to computers, internet, photocopying Access to training programs 1 to 1 Assistance Training incentives for businesses Youth Job Connection Who: Job Seekers\nWhen: Fergus\nMonday ‒ Friday at 9:00am‒4:30pm\nGuelph\nNorfolk Location Monday ‒ Friday at 8:30am‒4:30pm\nYouth Resource Centre, Stone Road Mall\nMonday ‒ Closed Tuesday, Thursday \u0026amp; Friday at 9:00am‒4:30pm Wednesday at 12:00pm‒7:00pm\nWhere: Fergus 160 St. David Street South, Unit 104\nGuelph—Norfolk location 177 Norfolk Street\nGuelph—Youth Resource Centre Stone Road Mall, 435 Stone Rd W. 2nd Floor\nAsk For: Guelph and Fergus locations\n(519) 823-2440\n","permalink":"/services/directory/employment/","tags":null,"title":"Employment Training"},{"categories":null,"contents":"Fragments themselves are Hugo partials that are located in layouts/partials/fragments/. Partials built into Syna are stored within the theme\u0026rsquo;s layout directory. Hugo enables local or per website overwrites of layouts and partials. For more details checkout Hugo\u0026rsquo;s template lookup order.\nThe default layout single.html is used to render each page. For list pages we use list.html layout. These layouts don\u0026rsquo;t need to be explicitly mentioned\nThe rendering code flow of Syna would do the following:\n single.html or list.html layout is called  The layout decides where the page directory is located (for list pages, it would be a _index directory next to index.md) helpers/fragments.html would find all the global fragments and all the local fragments  The process of finding all the fragments involved destructing the path to the page Locating all the _global/ directories in the parent directories and the current directory if the current page is a list page Sorting the said directories from the closest to the page to the furthest, making the local fragments and nearest _global directories more important   The helper would then remove duplicate fragments (fragments with the same name or the same directory name) All the page fragments are registered in a Scratch and can later be used for various reasons   head.html partial is rendered from baseof.html layout helpers/fragments-renderer.html is called  Fragments are ordered based on their weight attribute Fragments that are not disabled are rendered (404 fragment would not be rendered in any other page than 404)   A container for modal and React is added to the page in case there is any need for them js.html partial is rendered from baseof.html layout  Creating new fragments In order to create a custom fragment for your website create a new layout file named after your fragment and place it under [project_root]/layouts/partials/fragments/. Fragments are partials and follow the same rules. If you are not familiar with partials more details are available in the Hugo documentation.\n","permalink":"/services/directory/esl/","tags":null,"title":"ESL"},{"categories":null,"contents":"#→CAMBRIDGE\nConestoga College 12\n(519) 748-5220 ext. 3681\nESU: Essential Skills Upgrading 15\n(519) 740-3800\nThe Literacy Group of Waterloo Region 16, 17\nAdult Literacy Skills Upgrading\n(519) 621-7993 ext. 322\nModular Programs\n(519) 743-6090\nProject READ Literacy Network 17\n(519) 570-3054\nSt Louis Adult Learning \u0026amp; Continuing Education Centre 20, 22\nCore Essentials Upgrading\n(519) 745-1201 ext. 238\nSchool-to-Work Skills Training Programs\nHair/Culinary—(519) 745-1201 ext. 201\nPSW—(519) 745-1201 ext. 288\nWaterloo Region District School Board (WRDSB) 24\n(519) 885-0800\n","permalink":"/services/directory/guide/","tags":null,"title":"Guide"},{"categories":null,"contents":"In order to deploy your website using Syna follow the Hugo documentation which describes the process of deploying on various hosts or host agnostic approaches.\nEnvironment Variables DEMO_MODE type: boolean\ndefault: false\nIf set to true, all Syna related build time error messages will be muted.\nConfigurations .Site.Params.debug type: boolean\ndefault: false\nIf set to true, Syna related error messages will appear on the page.\n","permalink":"/services/directory/literacy/","tags":null,"title":"Literacy"},{"categories":null,"contents":"Add table of contents of any content fragment to the page.\nToC fragment can be used to render Table of Contents of any content fragment from any page. The default behavior is to get the name of the content fragment on the same page:\ncontent = \u0026quot;lit.md\u0026quot; content = \u0026quot;emp.md\u0026quot; content = \u0026quot;fam.md\u0026quot; content = \u0026quot;lib.md\u0026quot; content = \u0026quot;esl.md\u0026quot; content = \u0026quot;onl.md\u0026quot; ","permalink":"/services/toc/","tags":null,"title":"ToC"},{"categories":null,"contents":null,"permalink":"/about/table/","tags":null,"title":"Table Fragment"},{"categories":null,"contents":null,"permalink":"/services/toc/toc/","tags":null,"title":""},{"categories":null,"contents":"Code fragment = \u0026quot;toc\u0026quot; weight = 110 background = \u0026quot;secondary\u0026quot; content = \u0026quot;content.md\u0026quot; +++  Code (content.md) fragment = \u0026quot;content\u0026quot; weight = 111 disabled = true # This is just to prevent rendering of the content on the documentation +++ # Sample header 1 ## Sample header 2 ### Sample header 3 ## Sample header 2  ","permalink":"/services/toc/code-toc/","tags":null,"title":""},{"categories":null,"contents":"Employment Training \u0026amp; Information ","permalink":"/services/toc/emp/","tags":null,"title":""},{"categories":null,"contents":"English as a Second Language (ESL) ","permalink":"/services/toc/esl/","tags":null,"title":""},{"categories":null,"contents":"Family Literacy, Reading \u0026amp; Support Services ","permalink":"/services/toc/fam/","tags":null,"title":""},{"categories":null,"contents":"Libraries ","permalink":"/services/toc/lib/","tags":null,"title":""},{"categories":null,"contents":"Literacy \u0026amp; Upgrading ","permalink":"/services/toc/lit/","tags":null,"title":""},{"categories":null,"contents":"Online Learning ","permalink":"/services/toc/onl/","tags":null,"title":""},{"categories":null,"contents":null,"permalink":"/about/calendar/","tags":null,"title":""},{"categories":null,"contents":null,"permalink":"/about/list/","tags":null,"title":""},{"categories":null,"contents":null,"permalink":"/services/list/","tags":null,"title":""},{"categories":null,"contents":"This fragment renders table of contents of a content fragment. It can be used standalone, or in a slot in list or content fragment.\nIf it\u0026rsquo;s standalone, then the content fragment is required.\nVariables content type: string\nrequired\nPath to the content fragment that you need the table of contents of. This path can be relative to the page or relative to content/ directory.\n","permalink":"/services/toc/docs/","tags":null,"title":"Documentation"},{"categories":null,"contents":null,"permalink":"/about/","tags":null,"title":"About Syna"},{"categories":null,"contents":null,"permalink":"/","tags":null,"title":"Project READ Literacy Network"},{"categories":null,"contents":null,"permalink":"/services/","tags":null,"title":""},{"categories":null,"contents":null,"permalink":"/services/directory/","tags":null,"title":"The Directory of Programs"}]